20220309 JavaScript - Nested Loops
02 - Equal Sums Even Odd Position - judge: https://judge.softuni.org/Contests/Compete/Index/2410#1


Напишете функция, която получава две шестцифрени цели числа в диапазона от 100000 до 300000.
Винаги първото въведено число ще бъде по малко от второто.

На конзолата да се отпечатат на 1 ред разделени с интервал всички числа, които се намират между двете,
прочетени от конзолата числа и отговарят на следното условие:
    *) сумата от цифрите на четни и нечетни позиции да са равни.

Ако няма числа, отговарящи на условието на конзолата не се извежда резултат.


_____________ Test Data _______________


Input 1:
-------
(["100000",
"100050"])


Output 1:
--------
100001 100012 100023 100034 100045


Comment 1:
---------
Първото число, което генерираме е числото 100000.
Сумата от цифрите на четни позиции (жълто) е 0+0+0=0.
Сумата от цифрите на нечетни позиции (зелено) е 0+0+1=1.
Тъй като двете суми са различни числото не се отпечатва. 
Следващото, число е 100001.
Сумата на четни позиции е  1+0+0=1, а на нечетни 0+0+1=1.
Двете суми са равни и числото се отпечатва. 
Следващото число за проверка е 100002.
То не отговаря на условието и не се отпечатва. 
...
При числото 100045 сумата от четните позиции е 5+0+0=5, а на нечетни 4+0+1=5.
Двете суми са равни числото се отпечатва. И т.н.


---------------------------------------


Input 2:
-------
(["123456",
"124000"])


Output 2:
--------
123464 123475 123486 123497 123530 123541 123552 123563 123574 123585 123596 123640 123651 123662 123673 123684 123695 123750 123761 123772 123783 123794 123860 123871 123882 123893 123970 123981 123992


---------------------------------------


Input 3:
-------
(["299900",
"300000"])


Output 3:
--------
299970 299981 299992


---------------------------------------


Input 4:
-------
(["100115",
"100120"])


Output 4:
--------
Няма изход


---------------------------------------


Насоки:
------
    1) За да преминете през всички числа от интервала, направете for цикъл.
       След като сте получили входните числа, задайте първото число за начална стойност на контролната променлива.
       Итерирайте до достигане на второто число, като увеличавате стойността на контролната променлива с 1:

for (let i = firstNum; i <= secondNum; i++) {

}


    2) Вземете числото на текущата позиция като текст, като го конкатенирате с празен стринг:

for (let i = firstNum; i <= secondNum; i++) {
    let currentNum = "" + i;
}


    3) За да обходите всяка цифра от числото, направете for цикъл.
       След като е взето като текст, вземете неговата дължина с .length.
       Итерирайте до достигане на дължината на числото, като увеличавате стойността на контролната променлива с 1:

let currentNum = "" + i;
for (let j = 0; j < currentNum.length; j++) {

    }


    4) Продължете към дописване на логиката за намиране на сумата на четна и нечетна позиция за всяко число.
       Декларирайте по една променлива за четната и нечетна сума.

for (let i = firstNum; i <= secondNum; i++) {
    let currentNum = "" + i;
    let oddSum = 0;
    let evenSum = 0;
    for (let j = 0; j < currentNum.length; j++) {
        let currentDigit = Number(currentNum.charAt(j));
    }
}


    5) За да намерите цифрите, които се намират на четна позиция, използвайте условна if конструкция,
       проверите дали индекса му е четно число като го разделите модулно на 2(index % 2), ако е четно,
       добавете го към сумата на четните, ако не е, към сумата на нечетните. 

let currentNum = "" + i;
let oddSum = 0;
let evenSum = 0;
for (let j = 0; j < currentNum.length; j++) {
    let currentDigit = Number(currentNum.charAt(j));
    if (j % 2 === 0) {
        evenSum += currentDigit;
    } else {
        oddSum += currentDigit;
    }
}


    6) След като сте намерили сумата на цифрите на четни и нечетни позиции, проверете дали са равни, ако са,
       принтирайте числото. Програмата ви трябва да изглежда по следния начин:

let printLine = '';
for (let i = firstNum; i <= secondNum; i++) {
    let currentNum = "" + i;
    let oddSum = 0;
    let evenSum = 0;
    for (let j = 0; j < currentNum.length; j++) {
        let currentDigit = Number(currentNum.charAt(j));
        if (j % 2 === 0) {
            evenSum += currentDigit;
        } else {
            oddSum += currentDigit;
        }
    }
    if (oddSum === evenSum) {
        printLine += `${i}`;
    }
}
console.log(printLine);
