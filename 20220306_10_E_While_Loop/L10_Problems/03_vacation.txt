20220303 - JavaScript - While Loop
03 - Vacation - judge: https://judge.softuni.org/Contests/Compete/Index/2408#2


Джеси е решила да събира пари за екскурзия и иска от вас да ѝ помогнете да разбере дали ще успее да събере необходимата сума.
Тя спестява или харчи част от парите си всеки ден.
Ако иска да похарчи повече от наличните си пари, то тя ще похарчи всичко, което има и ще ѝ останат 0 лева.


Вход:
----
От масива се четат:
    *) Пари нужни за екскурзията - реално число в интервала [1.00 ... 25000.00]
    *) Налични пари - реално число в интервала [0.00 ... 25000.00]

След това многократно се четат по два реда:
    *) Вид действие – текст с възможности "spend" и "save".
    *) Сумата, която ще спести/похарчи - реално число в интервала [0.01 ... 25000.00]


Изход:
-----
Функцията трябва да приключи при следните случаи:
    *) Ако 5 последователни дни Джеси само харчи, на конзолата да се изпише:
        - "You can't save the money."
        - "{Общ брой изминали дни}"

    *) Ако Джеси събере парите за почивката на конзолата се изписва:
        - "You saved the money for {общ брой изминали дни} days."


____________ Test Data ____________


Input 1:
-------
(["2000",
"1000",
"spend",
"1200",
"save",
"2000"])


Output 1:
--------
You saved the money for 2 days.


Complete:
--------
Пари, нужни за екскурзията: 2000
Налични пари: 1000
spend - изваждаме от парите следващото число
            (1000 - 1200 = -200, което е по-малко от 0 
               => налични пари = 0)
        ~ последователни дни, в които харчи = 1
        - общо дни : 1
save - добавяме към парите следващото число
           (0 + 2000 = 2000)
        ~ последователни дни, в които харчи = 0
        - общо дни : 2
Наличните пари (2000) >= Пари, нужни за екскурзията (2000)


------------------------------------


Input 2:
-------
(["110",
"60",
"spend",
"10",
"spend",
"10",
"spend",
"10",
"spend",
"10",
"spend",
"10"])


Output 2:
--------
You can't save the money.
5


Comment 2:
---------
Пари, нужни за екскурзията: 110
Налични пари: 60
spend – изваждаме от парите следващото число (60 - 10 = 50)
        ~ последователни дни, в които харчи = 1
         - общо дни : 1
spend – изваждаме от парите следващото число (50 - 10 = 40)
        ~ последователни дни, в които харчи = 2
         - общо дни : 2
spend – изваждаме от парите следващото число (40 - 10 = 30)
        ~ последователни дни, в които харчи = 3
         - общо дни : 3
spend – изваждаме от парите следващото число (30 - 10 = 20)
        ~ последователни дни, в които харчи = 4
         - общо дни : 4
spend – изваждаме от парите следващото число (20 - 10 = 10)
        ~ последователни дни, в които харчи = 5
        - общо дни : 5
5 последователни дни харчи => налични пари: 10
Наличните пари (10) < Пари, нужни за екскурзията (110)


------------------------------------


Input 3:
-------
(["250",
"150",
"spend",
"50",
"spend",
"50",
"save",
"100",
"save",
"100"])


Output 3:
--------
You saved the money for 4 days.


Comment 3:
---------
Пари, нужни за екскурзията: 250
Налични пари: 150
spend - изваждаме от парите следващото число (150 - 50 = 100)
        ~ последователни дни, в които харчи = 1
        - общо дни : 1
spend - изваждаме от парите следващото число (100 - 50 = 50)
        ~ последователни дни, в които харчи = 2
        - общо дни : 2
save - добавяме към парите следващото число (50 + 100 = 150)
        ~ последователни дни, в които харчи = 0
        - общо дни : 3
save - добавяме към парите следващото число (150 + 100 = 250)
        ~ последователни дни, в които харчи = 0
         - общо дни : 4
Наличните пари (250) >= Пари, нужни за екскурзията (250)


------------------------------------
